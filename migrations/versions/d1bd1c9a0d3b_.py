"""

Revision ID: d1bd1c9a0d3b
Revises: 
Create Date: 2023-08-01 15:10:23.750931

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'd1bd1c9a0d3b'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('groups',
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('current_timestamp(0)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('current_timestamp(0)'), nullable=False),
    sa.Column('uuid', sqlmodel.sql.sqltypes.GUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('color', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_groups_uuid'), 'groups', ['uuid'], unique=True)
    op.create_table('users',
    sa.Column('role', postgresql.ENUM('student', 'teacher', 'admin', name='user_role'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('current_timestamp(0)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('current_timestamp(0)'), nullable=False),
    sa.Column('uuid', sqlmodel.sql.sqltypes.GUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('password', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('rating', sa.Integer(), nullable=False),
    sa.Column('learningClass', sa.Integer(), nullable=False),
    sa.Column('groupId', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('shtpMaintainer', sa.Boolean(), nullable=True),
    sa.Column('nickName', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('firstName', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('lastName', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('aboutText', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('patronymicName', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('avatarPath', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('telegram', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('github', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('stepik', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('kaggle', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('website', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('techStack', sqlmodel.sql.sqltypes.AutoString(length=800), nullable=True),
    sa.ForeignKeyConstraint(['groupId'], ['groups.uuid'], ),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('github'),
    sa.UniqueConstraint('kaggle'),
    sa.UniqueConstraint('nickName'),
    sa.UniqueConstraint('stepik'),
    sa.UniqueConstraint('telegram'),
    sa.UniqueConstraint('website')
    )
    op.create_index(op.f('ix_users_uuid'), 'users', ['uuid'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_uuid'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_groups_uuid'), table_name='groups')
    op.drop_table('groups')
    # ### end Alembic commands ###